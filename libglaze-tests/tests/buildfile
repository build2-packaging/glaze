import libs = libglaze%lib{glaze} \
              libboost-ext-ut%lib{boost-ext-ut}

import eigen = Eigen%lib{Eigen}

# Unit tests.
#
exe{*}:
{
  test = true
  install = false
}

for [dir_path] d: tests/{*_test/ *_conformance/ *_performance/ }
{
  n = $string($leaf($d))
  sd = [dir_path] $regex.replace("$src_base/tests/$n", "[\\\]", "/")
  ./: exe{$n}: tests/$n/{hxx cxx}{*} $libs testscript
  tests/$n/obj{*}:
  {
    cxx.poptions += "-DCURRENT_DIRECTORY=\"$sd\""
  }
}

# asio_repe (WIP, so upstream only builds it, not running any tests)
./: exe{asio_repe_server}: tests/asio_repe/server/{hxx cxx}{*} $libs
{
  test = false
}
./: exe{asio_repe_client}: tests/asio_repe/client/{hxx cxx}{*} $libs
{
  test = false
}

# Build options.
#

# asio_repe
if ($cxx.id == 'msvc' || $cxx.id == 'msvc-clang')
  tests/asio_repe/obj{**}: cxx.coptions += /EHsc
else
  tests/asio_repe/obj{**}: cxx.coptions += -fexceptions -frtti

# eigen_test
exe{eigen_test}: $eigen

# exceptions_test
if ($cxx.id == 'msvc' || $cxx.id == 'msvc-clang')
  tests/exceptions_test/obj{*}: cxx.coptions += /EHsc
else
  tests/exceptions_test/obj{*}: cxx.coptions += -fexceptions

# lib_test
exe{lib_test}: libs{test_lib}
libs{test_lib}: libul{test_lib}: tests/lib_test/test_lib/{cxx}{*} $libs
libs{test_lib}: def{test_lib}: include = ($cxx.target.system == 'win32-msvc')
def{test_lib}: libul{test_lib}
out_dir = $out_base
tests/lib_test/obj{lib_test}:
{
  cxx.poptions = "-DTEST_LIB_INTERFACE_LOCATION=\"$regex.replace("$out_dir", "[\\\]", "/")\""
}

if ($cxx.target.class != 'windows')
  exe{lib_test}: cxx.libs += -ldl
if ($cxx.target.system == 'mingw32')
  libs{test_lib}: cxx.loptions += -Wl,--export-all-symbols

# Common build options.
#
# See: https://github.com/stephenberry/glaze/blob/1c40c477ac0ba636faa539cb65beaaab58eef1fc/tests/CMakeLists.txt
switch $cxx.id: path.match, $cxx.target.system: path.match
{
  case 'gcc' | 'clang*'
  {
    cxx.coptions += \
      -fno-rtti \
      -fno-exceptions \
      -Wno-missing-braces
  }
  case 'gcc', 'mingw32'
  {
    cxx.coptions += \
      -Wa,-mbig-obj
  }
  case 'msvc' | 'msvc-clang'
  {
    cxx.coptions += \
      /permissive- \
      /bigobj \
      /GR- \
      /wd4459 \
      /wd4805
  }
}
